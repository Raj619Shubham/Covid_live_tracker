{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","contanier","Typography","appTitle","variant","gutterBottom","align","appCreator","Grid","container","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","cardTitle1","color","start","end","value","duration","separator","cardFooter","Date","toDateString","cardTitle2","cardTitle3","countryText","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","toast","configure","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","notify","success","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9a223b23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  StylesProvider,\r\n} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading......\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.contanier}>\r\n      <Typography\r\n        className={styles.appTitle}\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        align=\"center\"\r\n      >\r\n        {\" \"}\r\n        Global Coronavirus Live Tracker{\" \"}\r\n      </Typography>\r\n      <Typography\r\n        className={styles.appCreator}\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        align=\"center\"\r\n      >\r\n        {\" \"}\r\n        Developed by Raj Shubham: ){\" \"}\r\n      </Typography>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              className={styles.cardTitle1}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {\" \"}\r\n              Infected{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={3.5}\r\n                separator=\",\"\r\n              />{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} variant=\"body2\">\r\n              Number of active cases of COVID - 19.{\" \"}\r\n            </Typography>{\" \"}\r\n          </CardContent>{\" \"}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              className={styles.cardTitle2}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {\" \"}\r\n              Recovered{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={3.5}\r\n                separator=\",\"\r\n              />{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} variant=\"body2\">\r\n              Number of recovered patients of COVID - 19.{\" \"}\r\n            </Typography>{\" \"}\r\n          </CardContent>{\" \"}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              className={styles.cardTitle3}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {\" \"}\r\n              Deaths{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={3.5}\r\n                separator=\",\"\r\n              />{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography className={styles.cardFooter} variant=\"body2\">\r\n              Number of deaths caused by COVID - 19.{\" \"}\r\n            </Typography>{\" \"}\r\n          </CardContent>{\" \"}\r\n        </Grid>\r\n      </Grid>{\" \"}\r\n      <Typography\r\n        className={styles.countryText}\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        align=\"center\"\r\n      >\r\n        {\" \"}\r\n        View by country{\" \"}\r\n      </Typography>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n\r\n\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        notify();\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const notify = () => {\r\n        toast.success(\"Fir se #MuskurayegaIndia\");\r\n        toast.success(\"Stay home , Stay Safe !\");\r\n    }\r\n\r\n\r\n\r\n    const barChart = (\r\n        confirmed ? ( <\r\n            Bar data = {\r\n                {\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }, ],\r\n                }\r\n            }\r\n            options = {\r\n                {\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }\r\n            }\r\n            />\r\n        ) : null\r\n    );\r\n\r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        ( <\r\n            Line data = {\r\n                {\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    }, ],\r\n                }\r\n            }\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return ( < div className = { styles.container } > { notify } { country ? barChart : lineChart } <\r\n        /div>\r\n    );\r\n};\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n        const [fetchedCountries, setfetchedCountries] = useState([]);\r\n\r\n        useEffect(() => {\r\n            const fetchAPI = async() => {\r\n                setfetchedCountries(await fetchCountries());\r\n            }\r\n\r\n            fetchAPI();\r\n        }, [setfetchedCountries]);\r\n\r\n\r\n        return ( <\r\n            FormControl className = { styles.formControl } >\r\n            <\r\n            NativeSelect defaultValue = \"\"\r\n            onChange = {\r\n                (e) => handleCountryChange(e.target.value)\r\n            } >\r\n            <\r\n            option value = \"\" > Global < /option> \r\n\r\n            {\r\n                fetchedCountries.map((country, i) => < option key = { i }\r\n                    value = { country } > { country } < /option>)\r\n                }\r\n\r\n\r\n                <\r\n                /NativeSelect> < /\r\n                FormControl >\r\n            )\r\n        }\r\n\r\n        export default CountryPicker;","import React from 'react';\r\n\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return ( < div className = { styles.container } >\r\n            <\r\n            img className = { styles.image }\r\n            src = { coronaImage }\r\n            alt = \"COVID-19\" / >\r\n            <\r\n            Cards data = {\r\n                data\r\n            }\r\n            /> <\r\n            CountryPicker handleCountryChange = { this.handleCountryChange }\r\n            / > <\r\n            Chart data = { data }\r\n            country = { country }\r\n            / > < /\r\n            div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__X8kTr\",\"image\":\"App_image__1tEFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Guk1\",\"card\":\"Cards_card__12GUn\",\"infected\":\"Cards_infected__21CWf\",\"recovered\":\"Cards_recovered__3Uqb4\",\"deaths\":\"Cards_deaths__2Q9gM\",\"cardTitle1\":\"Cards_cardTitle1__38asz\",\"cardTitle2\":\"Cards_cardTitle2__3grri\",\"cardTitle3\":\"Cards_cardTitle3__qWbFv\",\"countryText\":\"Cards_countryText__1WCcW\",\"cardFooter\":\"Cards_cardFooter__2PKR0\",\"appTitle\":\"Cards_appTitle__zskUJ\",\"appCreator\":\"Cards_appCreator__4rUUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3uRdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2xOJ4\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}